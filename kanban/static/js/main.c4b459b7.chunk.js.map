{"version":3,"sources":["Card.js","Column.js","App.js","index.js"],"names":["CardContainer","styled","div","_templateObject","LeftArrow","_templateObject2","RightArrow","_templateObject3","Card","props","react_default","a","createElement","onClick","moveLeft","columnIndex","data","key","content","moveRight","ColumnContainer","Column_templateObject","TitleContainer","h2","Column_templateObject2","color","AddButton","p","Column_templateObject3","Column","cards","map","e","src_Card","index","title","add","FlexContainer","App_templateObject","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNewCard","replacementIndex","input","window","prompt","newColumn","state","columns","push","Math","random","newColumns","concat","toConsumableArray","slice","setState","handleMoveRight","length","oldColumn","oldCards","cardToMove","filter","oldColumnNewCards","newCards","handleMoveLeft","_this2","col","src_Column","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c4b459b7.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst CardContainer = styled.div`\n    text-align: left;\n    height: auto;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    margin-bottom: 12px;\n    background-color: white;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nconst LeftArrow = styled.div`\n    width: auto;\n    padding-left: 8px;\n    padding-right: 12px;\n`;\n\nconst RightArrow = styled.div`\n    width: auto;\n    padding-left: 12px;\n    padding-right: 8px;\n`;\n\nconst Card = (props) => {\n    return (\n        <CardContainer>\n            <LeftArrow onClick={() => props.moveLeft(props.columnIndex, props.data.key)}>{props.columnIndex === 0 ? '' : '<'}</LeftArrow>\n            {props.data.content}\n            <RightArrow onClick={() => props.moveRight(props.columnIndex, props.data.key)}>{props.columnIndex === 3 ? '' : '>'}</RightArrow>\n        </CardContainer>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport styled from 'styled-components';\nimport Card from './Card';\n\nconst ColumnContainer = styled.div`\n    width: 100%;\n    background-color: none;\n    margin-left: ${props => props.columnIndex === 0 ? 0 : '12.5px'};\n    margin-right: ${props => props.columnIndex === 3 ? 0 : '12.5px'};\n`;\n\nconst TitleContainer = styled.h2`\n    width: 100%;\n    text-align: center;\n    color: white;\n    height: 30px;\n    margin-top: 0;\n    margin-bottom: 12px;\n    background-color: ${props => props.color};\n`;\n\nconst AddButton = styled.p`\n    cursor: pointer;\n`;\n\nconst Column = (props) => {\n    const cards = props.data.cards.map(e => <Card \n                                            moveLeft={props.moveLeft}\n                                            moveRight={props.moveRight}\n                                            columnIndex={props.index}\n                                            data={e}\n                                            key={e.key}\n                                        />)\n    return (\n        <ColumnContainer columnIndex={props.index}>\n            <TitleContainer color={props.data.color}>{props.data.title}</TitleContainer>\n            {cards}\n            <AddButton onClick={() => props.add(props.index)}>+ Add a card</AddButton>\n        </ColumnContainer>\n    )\n}\n\nexport default Column;","import React, { Component } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport Column from './Column';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: calc(100% - 50px);\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  justify-content: center;\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        {\n          title: 'Winnie',\n          color: '#8E6E95',\n          key: Math.random()*10000,\n          cards: [\n            {\n              content: 'Col 1',\n              key: Math.random()*10000,\n            },\n            {\n              content: 'Col 1',\n              key: Math.random()*10000,\n            },\n          ],\n        },\n        {\n          title: 'Bob',\n          color: '#39A59C',\n          key: Math.random()*10000,\n          cards: [\n            {\n              content: 'Col 2',\n              key: Math.random()*10000,\n            },\n            {\n              content: 'Col 2',\n              key: Math.random()*10000,\n            },\n          ],\n        },\n        {\n          title: 'Thomas',\n          color: '#344759',\n          key: Math.random()*10000,\n          cards: [\n            {\n              content: 'Col 3',\n              key: Math.random()*10000,\n            },\n            {\n              content: 'Col 3',\n              key: Math.random()*10000,\n            },\n          ],\n        },\n        {\n          title: 'George',\n          color: '#E8741E',\n          key: Math.random()*10000,\n          cards: [\n            {\n              content: 'Col 4',\n              key: Math.random()*10000,\n            },\n            {\n              content: 'Col 4',\n              key: Math.random()*10000,\n            },\n          ],\n        },\n      ],\n    }\n  }\n\n  handleNewCard = (replacementIndex) => {\n    const input = window.prompt('Add a card with new content:', '');\n    if (input === null) {\n      return;\n    }\n    const newColumn = this.state.columns[replacementIndex];\n    newColumn.cards.push({\n      content: input,\n      key: Math.random()*10000,\n    });\n    const newColumns = [...this.state.columns.slice(0, replacementIndex), newColumn, ...this.state.columns.slice(replacementIndex + 1)]\n    this.setState({\n      columns: newColumns,\n    })\n  }\n\n  handleMoveRight = (columnIndex, key) => {\n    if (columnIndex === this.state.columns.length - 1) {\n      return;\n    }\n    const oldColumn = this.state.columns[columnIndex];\n    const oldCards = oldColumn.cards;\n    const cardToMove = oldCards.filter(e => e.key === key)[0];\n    const oldColumnNewCards = oldCards.filter(e => e.key !== key);\n    oldColumn.cards = oldColumnNewCards;\n\n    const newColumn = this.state.columns[columnIndex + 1];\n    const newCards = newColumn.cards;\n    newCards.push(cardToMove);\n    newColumn.cards = newCards;\n\n    const newColumns = [...this.state.columns.slice(0, columnIndex), oldColumn, newColumn, ...this.state.columns.slice(columnIndex + 2)];\n\n    this.setState({\n      columns: newColumns,\n    })\n\n  }\n\n  handleMoveLeft = (columnIndex, key) => {\n    if (columnIndex === 0) {\n      return;\n    }\n    const oldColumn = this.state.columns[columnIndex];\n    const oldCards = oldColumn.cards;\n    const cardToMove = oldCards.filter(e => e.key === key)[0];\n    const oldColumnNewCards = oldCards.filter(e => e.key !== key);\n    oldColumn.cards = oldColumnNewCards;\n\n    const newColumn = this.state.columns[columnIndex - 1];\n    const newCards = newColumn.cards;\n    newCards.push(cardToMove);\n    newColumn.cards = newCards;\n\n    const newColumns = [...this.state.columns.slice(0, columnIndex - 1), newColumn, oldColumn, ...this.state.columns.slice(columnIndex + 1)];\n\n    this.setState({\n      columns: newColumns,\n    })\n\n  }\n\n  render() {\n    const columns = this.state.columns.map((col, index) => <Column moveLeft={this.handleMoveLeft} moveRight={this.handleMoveRight} add={this.handleNewCard} data={col} index={index} key={col.key} />)\n    return (\n      <FlexContainer>\n        {columns}\n      </FlexContainer>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}