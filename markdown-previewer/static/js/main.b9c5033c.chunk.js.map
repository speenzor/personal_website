{"version":3,"sources":["index.js"],"names":["App","props","_this","Object","_Users_spencercorwin_Documents_Code_Projects_freeCodeCamp_front_end_libraries_projects_markdown_previewer_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_spencercorwin_Documents_Code_Projects_freeCodeCamp_front_end_libraries_projects_markdown_previewer_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_spencercorwin_Documents_Code_Projects_freeCodeCamp_front_end_libraries_projects_markdown_previewer_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","markdown","placeholder","handleChange","bind","_Users_spencercorwin_Documents_Code_Projects_freeCodeCamp_front_end_libraries_projects_markdown_previewer_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","e","setState","target","value","preventDefault","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Editor","onChange","Preview","React","Component","Toolbar","id","text","autofocus","type","wrap","marked","setOptions","breaks","gfm","dangerouslySetInnerHTML","__html","ReactDOM","render","document","getElementById"],"mappings":"0OAKMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,SAAUC,GAEZT,EAAKU,aAAeV,EAAKU,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KALHA,4EAQNa,GACXV,KAAKW,SAAS,CACZN,SAAUK,EAAEE,OAAOC,QAErBH,EAAEI,kDAIF,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAD,CACEb,SAAUL,KAAKI,MAAMC,SACrBc,SAAUnB,KAAKO,eAEjBQ,EAAAC,EAAAC,cAACG,EAAD,CACEf,SAAUL,KAAKI,MAAMC,mBAxBfgB,IAAMC,WA+BhBC,mLAEF,OACER,EAAAC,EAAAC,cAAA,OAAKO,GAAG,WACLxB,KAAKJ,MAAM6B,aAJEJ,IAAMC,WAUtBJ,mLAEF,OACEH,EAAAC,EAAAC,cAAA,OAAKO,GAAG,mBACRT,EAAAC,EAAAC,cAACM,EAAD,CAASE,KAAK,oBACdV,EAAAC,EAAAC,cAAA,YACES,WAAS,EACTF,GAAG,SACHX,MAAOb,KAAKJ,MAAMS,SAClBc,SAAUnB,KAAKJ,MAAMuB,SACrBQ,KAAK,OACLC,KAAK,iBAXQP,IAAMC,WAkBrBF,mLAEFS,IAAOC,WAAW,CAChBC,QAAQ,EACRC,KAAK,IAEP,IAAI3B,EAAWwB,IAAO7B,KAAKJ,MAAMS,UACjC,OACEU,EAAAC,EAAAC,cAAA,OAAKO,GAAG,oBACNT,EAAAC,EAAAC,cAACM,EAAD,CAASE,KAAK,uBAChBV,EAAAC,EAAAC,cAAA,OAAKO,GAAG,UAAUS,wBAAyB,CAACC,OAAO7B,aAVnCgB,IAAMC,WAgBtBhB,EAAW,wwCAiDjB6B,IAASC,OAAOrB,EAAAC,EAAAC,cAACtB,EAAD,MAAS0C,SAASC,eAAe","file":"static/js/main.b9c5033c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport marked from 'marked';\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        markdown: placeholder\n      }\n      this.handleChange = this.handleChange.bind(this);\n    }\n    \n    handleChange(e) {\n      this.setState({\n        markdown: e.target.value\n      })\n      e.preventDefault();\n    }\n    \n    render() {\n      return (\n        <div>\n          <Editor\n            markdown={this.state.markdown}\n            onChange={this.handleChange}\n            />\n          <Preview\n            markdown={this.state.markdown}\n            />\n        </div>\n      )\n    }\n  }\n  \n  class Toolbar extends React.Component {\n    render() {\n      return (\n        <div id=\"toolbar\">\n          {this.props.text}\n        </div>\n      )\n    }\n  }\n  \n  class Editor extends React.Component {\n    render() {\n      return (\n        <div id=\"editorContainer\">\n        <Toolbar text=\"Markdown Editor\"/>\n        <textarea\n          autofocus\n          id=\"editor\"\n          value={this.props.markdown}\n          onChange={this.props.onChange}\n          type=\"test\"\n          wrap=\"hard\">\n        </textarea>\n        </div>\n      )\n    }\n  }\n  \n  class Preview extends React.Component {\n    render() {\n      marked.setOptions({\n        breaks: true,\n        gfm: true\n      });\n      let markdown = marked(this.props.markdown);\n      return (\n        <div id=\"previewContainer\">\n          <Toolbar text=\"Markdown Previewer\"/>\n        <div id=\"preview\" dangerouslySetInnerHTML={{__html:markdown}} />\n        </div>\n      )\n    }\n  }\n  \n  const placeholder = \n  `# Welcome to my React Markdown Previewer!\n  \n  ## This is a sub-heading...\n  ### And here's some other cool stuff:\n    \n  Heres some code, \\`<div></div>\\`, between 2 backticks.\n  \n  \\`\\`\\`\n  // this is multi-line code:\n  \n  function anotherExample(firstLine, lastLine) {\n    if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n      return multiLineCode;\n    }\n  }\n  \\`\\`\\`\n    \n  You can also make text **bold**... whoa!\n  Or _italic_.\n  Or... wait for it... **_both!_**\n  And feel free to go crazy ~~crossing stuff out~~.\n  \n  There's also [links](https://www.freecodecamp.com), and\n  > Block Quotes!\n  \n  And if you want to get really crazy, even tables:\n  \n  Wild Header | Crazy Header | Another Header?\n  ------------ | ------------- | ------------- \n  Your content can | be here, and it | can be here....\n  And here. | Okay. | I think we get it.\n  \n  - And of course there are lists.\n    - Some are bulleted.\n       - With different indentation levels.\n          - That look like this.\n  \n  \n  1. And there are numbererd lists too.\n  1. Use just 1s if you want! \n  1. But the list goes on...\n  - Even if you use dashes or asterisks.\n  * And last but not least, let's not forget embedded images:\n  \n  ![React Logo w/ Text](https://goo.gl/Umyytc)\n  `\n  \n  \n  ReactDOM.render(<App />, document.getElementById(\"app\"));\n  "],"sourceRoot":""}