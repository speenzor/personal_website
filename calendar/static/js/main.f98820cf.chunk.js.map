{"version":3,"sources":["TopBar.js","utils/constants.js","Day.js","DayGrid.js","DisplayEvents.js","App.js","index.js"],"names":["ContainerDiv","styled","div","_templateObject","rowHeight","ArrowContainer","_templateObject2","Month","_templateObject3","Year","_templateObject4","DateContainer","_templateObject5","TodayButton","_templateObject6","HiddenContainer","_templateObject7","TopBar","_ref","month","year","incMonth","decMonth","today","react_default","a","createElement","onClick","num","numToMonth","Unit","Day_templateObject","grey","_ref2","highlight","_ref3","setDate","DayOf","p","Day_templateObject2","Date","Day_templateObject3","Dots","Day_templateObject4","Day","_ref4","weekDay","date","events","dots","i","push","dotsToRender","join","number","numToDayOfWeek","Day_Date","toString","Grid","DayGrid_templateObject","days","Math","round","DayGrid","dateToDisplay","daysToRender","firstDayOfMonth","moment","day","prevMonthDays","daysInMonth","_loop","y","x","numberOfEvents","filter","event","getFullYear","getMonth","getDate","length","src_Day","key","random","_loop2","_loop3","numberOfDaysRendered","Container","DisplayEvents_templateObject","display","Title","DisplayEvents_templateObject2","DisplayEvents","itemsToDisplay","map","toDateString","AppContainer","App_templateObject","EventsContainer","App_templateObject2","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","displayEvents","incrementMonth","bind","assertThisInitialized","decrementMonth","setToToday","setDateToDisplay","setState","_this2","eventsToPass","src_TopBar","incYear","incrementYear","decYear","decementYear","src_DayGrid","src_DisplayEvents","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f98820cf.chunk.js","sourcesContent":["import React from 'react';\nimport { calWidth, rowHeight, borderRadius, hoverColor } from './utils/constants';\nimport styled from 'styled-components';\n\nconst ContainerDiv = styled.div`\n    width: ${calWidth}px;\n    height: ${rowHeight + 20}px;\n    background-color: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: 1px solid black;\n    box-sizing: border-box;\n    border-top-left-radius: ${borderRadius}px;\n    border-top-right-radius: ${borderRadius}px;\n`;\n\nconst buttonBoxShadow = 'box-shadow: 1px 1px 1px;';\n\nconst ArrowContainer = styled.div`\n    height: auto;\n    width: auto;\n    background-color: none;\n    padding-left: 10px;\n    padding-right: 10px;\n    margin-left: 10px;\n    margin-right: 10px;\n    border: 1px solid black;\n    border-radius: ${borderRadius}px;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    ${buttonBoxShadow}\n    &:hover {\n        background-color: ${hoverColor};\n    }\n    &:active {\n        background-color: white;\n    }\n`;\n\nconst Month = styled.div`\n    color: black;\n    background-color: none;\n    padding: 0;\n    margin-bottom: 0;\n    margin-right: 6px;\n`;\n\nconst Year = styled.div`\n    color: black;\n    margin-bottom: 0;\n    padding: 0;\n`;\n\nconst DateContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    overflow: hidden;\n    padding: 0;\n    font-size: 20px;\n    background-color: none;\n`;\n\nconst TodayButton = styled.div`\n    border-radius: ${borderRadius}px;\n    background-color: none;\n    border: 1px solid black;\n    padding-left: 10px;\n    padding-right: 10px;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    ${buttonBoxShadow}\n    &:hover {\n        background-color: ${hoverColor};\n    }\n    &:active {\n        background-color: white;\n    }\n`;\n\nconst HiddenContainer = styled.div`\n    color: white;\n    padding-left: 10px;\n    padding-right: 10px;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n`;\n\nconst numToMonth = (num) => {\n    switch(num) {\n        case 0: return 'January';\n        case 1: return 'February';\n        case 2: return 'March';\n        case 3: return 'April';\n        case 4: return 'May';\n        case 5: return 'June';\n        case 6: return 'July';\n        case 7: return 'August';\n        case 8: return 'September';\n        case 9: return 'October';\n        case 10: return 'November';\n        case 11: return 'December';\n        default: return '';\n    }\n}\n\nexport const TopBar = ({ month, year, incMonth, decMonth, today }) => (\n    <ContainerDiv>\n        <ArrowContainer onClick={decMonth}>Prev</ArrowContainer>\n        <HiddenContainer>Today</HiddenContainer>\n        <DateContainer>\n            <Month>{numToMonth(month)}</Month>\n            <Year>{year}</Year>\n        </DateContainer>\n        <TodayButton onClick={today}>Today</TodayButton>\n        <ArrowContainer onClick={incMonth}>Next</ArrowContainer>\n    </ContainerDiv>\n)\n\nexport default TopBar;\n","export const calWidth = 600;\nexport const rowHeight = 40;\nexport const borderRadius = 24;\nexport const hoverColor = 'grey';\n","import React from 'react';\nimport styled from 'styled-components';\nimport { calWidth, rowHeight, hoverColor } from './utils/constants';\n\nconst Unit = styled.div`\n    width: ${calWidth/7}px;\n    height: ${rowHeight}px;\n    border: 1px solid black;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    background-color: ${({ grey }) => grey ? 'hsl( 11, 0%, 90%)' : 'none'};\n    color: ${({ highlight }) => highlight ? 'red' : 'none'};\n    &:hover {\n        background-color: ${({ setDate }) => setDate};\n    }\n`;\n\nconst DayOf = styled.p`\n    text-align: center;\n    font-size: 10px;\n    margin: 0;\n`;\n\nconst Date = styled.p`\n    text-align: center;\n    font-size: 12px;\n    padding: 0;\n    margin-top: 0;\n    margin-bottom: -10px;\n`;\n\nconst Dots = styled.div`\n    margin: 0;\n    padding: 0;\n    background-color: none;\n    text-align: center;\n`;\n\nconst numToDayOfWeek = (number) => {\n    switch(number) {\n        case 0: return 'Sun';\n        case 1: return 'Mon';\n        case 2: return 'Tues';\n        case 3: return 'Wed';\n        case 4: return 'Thur';\n        case 5: return 'Fri';\n        case 6: return 'Sat';\n        case 7: return 'Sun';\n        default: return '';\n    }\n}\n\nconst Day = ({ weekDay, date, month, year, grey, highlight, setDate, events }) => {\n    const dots = [];\n    for (let i = 0; i < events; i++) {\n        if (i > 6) {\n            break;\n        }\n        dots.push('.')\n    }\n    const dotsToRender = dots.join('');\n    return (\n        <Unit setDate={setDate ? hoverColor : 'none'} grey={grey} highlight={highlight} onClick={setDate ? () => setDate(date, month, year) : ''}>\n            <DayOf>{numToDayOfWeek(weekDay)}</DayOf>\n            <Date>{date.toString()}</Date>\n            <Dots>{dotsToRender}</Dots>\n        </Unit>\n    )\n}\n\nexport default Day;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Day from './Day';\nimport { rowHeight, calWidth } from './utils/constants';\nimport moment from 'moment';\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    grid-template-rows: repeat(5, 1fr);\n    grid-column-gap: 0;\n    grid-row-gap: 0;\n    height: ${({ days }) => (Math.round(days/8) + 1) * rowHeight}px;\n    width: ${calWidth}px;\n`;\n\nconst DayGrid = ({ year, month, days, dateToDisplay, setDate, events }) => {\n    const daysToRender = [];\n    const firstDayOfMonth = moment().month(month).date(1).day();\n    const prevMonthDays = moment().month(month - 1).daysInMonth();\n    for (let y = prevMonthDays - firstDayOfMonth + 1, x = 1; y <= prevMonthDays; y++, x++) {\n        let numberOfEvents = events.filter(event => event.date.getFullYear() === year && event.date.getMonth() === month && event.date.getDate() === y).length;\n        daysToRender.push(<Day key={Math.random()*10000} weekDay={x - 1} date={y} month={month} year={year} grey={true} events={numberOfEvents}/>);\n    }\n    for (let i = 1; i <= days; i++) {\n        if (i === dateToDisplay.getDate() && dateToDisplay.getMonth() === month && dateToDisplay.getFullYear() === year) {\n            let numberOfEvents = events.filter(event => event.date.getFullYear() === year && event.date.getMonth() === month && event.date.getDate() === i).length;\n            daysToRender.push(<Day key={i} weekDay={moment().month(month).date(i).day()} date={i} month={month} year={year} grey={false} setDate={setDate} events={numberOfEvents} highlight={true}/>)\n        } else {\n            let numberOfEvents = events.filter(event => event.date.getFullYear() === year && event.date.getMonth() === month && event.date.getDate() === i).length;\n            daysToRender.push(<Day key={i} weekDay={moment().month(month).date(i).day()} date={i} month={month} year={year} grey={false} setDate={setDate} events={numberOfEvents}/>)\n        }\n    }\n    const lastDayOfMonth = moment().month(month).date(days).day();\n    for (let x = lastDayOfMonth + 1, y = 1; x < 7; x++, y++) {\n        let numberOfEvents = events.filter(event => event.date.getFullYear() === year && event.date.getMonth() === month && event.date.getDate() === y).length;\n        daysToRender.push(<Day key={Math.random()*10000} weekDay={x} date={y} month={month} year={year} grey={true} events={numberOfEvents}/>)\n    }\n    const numberOfDaysRendered = daysToRender.length;\n    return (\n        <Grid days={numberOfDaysRendered}>\n            {daysToRender}\n        </Grid>\n    )\n}\n\nexport default DayGrid;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { calWidth, borderRadius } from './utils/constants';\n\nconst Container = styled.div`\n    display: ${({ display }) => display ? 'block' : 'none'};\n    border: 1px solid black;\n    border-bottom-left-radius: ${borderRadius}px;\n    border-bottom-right-radius: ${borderRadius}px;\n    width: ${calWidth};\n    height: auto;\n`;\n\nconst Title = styled.p`\n    margin-left: 10px;\n`;\n\nconst DisplayEvents = ({ display, events }) => {\n    const itemsToDisplay = events.map(event => <li>{event.event}</li>);\n    return (\n        <Container display={display}>\n            <Title>{events.length === 0 ? 'No events today' : events[0].date.toDateString()}</Title>\n            <ul>{itemsToDisplay}</ul>\n        </Container>\n    )\n}\n\nexport default DisplayEvents;\n","import React, { Component } from 'react';\nimport TopBar from './TopBar';\nimport DayGrid from './DayGrid';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { calWidth, rowHeight, borderRadius } from './utils/constants';\nimport DisplayEvents from './DisplayEvents';\n\nconst AppContainer = styled.div`\n    border: 1px solid black;\n    border-radius: ${borderRadius}px;\n    margin-left: auto;\n    margin-right: auto;\n    width: ${calWidth}px;\n    margin-top: calc(50vh - ${rowHeight*5}px);\n    background-color: white;\n    box-shadow: 1px 1px 1px;\n`;\n\nconst EventsContainer = styled.div``;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: moment(new Date()),\n      displayEvents: true,\n      dateToDisplay: new Date(),\n      events: [\n        {date: new Date(), event: 'Haircut'},\n        {date: new Date(), event: 'Write code to eat the world'},\n        {date: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1), event: 'Soccer game'},\n        {date: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1), event: 'Pickup kids'},\n        {date: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1), event: 'Make dinner'},\n        {date: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1), event: 'Watch favorite TV show'},\n        {date: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1), event: 'Read emails'},\n        {date: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 2), event: 'Party at Elliott\\'s'}\n      ]\n    }\n\n    this.incrementMonth = this.incrementMonth.bind(this);\n    this.decrementMonth = this.decrementMonth.bind(this);\n    this.setToToday = this.setToToday.bind(this);\n    this.setDateToDisplay = this.setDateToDisplay.bind(this);\n  }\n\n  incrementMonth() {\n    this.setState(state => ({\n      date: state.date.month(state.date.month() + 1)\n    }))\n  }\n\n  decrementMonth() {\n    this.setState(state => ({\n      date: state.date.month(state.date.month() - 1)\n    }))\n  }\n\n  setToToday() {\n    this.setState({\n      date: moment(new Date()),\n      dateToDisplay: new Date()\n    })\n  }\n\n  setDateToDisplay(date, month, year) {\n    this.setState({\n      dateToDisplay: new Date(year, month, date)\n    })\n  }\n\n  render() {\n    const eventsToPass = this.state.events.filter(event => event.date.getDate() === this.state.dateToDisplay.getDate() && event.date.getMonth() === this.state.dateToDisplay.getMonth() && event.date.getFullYear() === this.state.dateToDisplay.getFullYear());\n    return (\n      <AppContainer>\n        <TopBar today={this.setToToday} incYear={this.incrementYear} decYear={this.decementYear} incMonth={this.incrementMonth} decMonth={this.decrementMonth} month={this.state.date.month()} year={this.state.date.year()}/>\n        <DayGrid year={this.state.date.year()} month={this.state.date.month()} days={this.state.date.daysInMonth()} dateToDisplay={this.state.dateToDisplay} setDate={this.setDateToDisplay} events={this.state.events}/>\n        <EventsContainer>\n          <DisplayEvents display={this.state.displayEvents} events={eventsToPass}/>\n        </EventsContainer>  \n      </AppContainer>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}