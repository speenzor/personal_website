{"version":3,"sources":["serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","unregister","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","projectName","App","props","_this","Object","_Users_spencercorwin_Documents_Code_Projects_free_code_camp_front_end_libraries_projects_javascript_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_spencercorwin_Documents_Code_Projects_free_code_camp_front_end_libraries_projects_javascript_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_spencercorwin_Documents_Code_Projects_free_code_camp_front_end_libraries_projects_javascript_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","currentValue","formula","handleClear","bind","_Users_spencercorwin_Documents_Code_Projects_free_code_camp_front_end_libraries_projects_javascript_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","handleDigit","handleOperator","handleDecimal","handleEquals","setState","e","formulaOutput","map","x","toString","reduce","y","currentValueOutput","test","target","value","length","alert","_Users_spencercorwin_Documents_Code_Projects_free_code_camp_front_end_libraries_projects_javascript_calculator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","concat","preventDefault","slice","next","split","nextnext","filter","preOutput","parseFloat","join","output","eval","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","id","Formula","Output","Buttons","React","Component","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e55032d5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n//Adding global style rules using the * selector, or by adding rules to body {..} or html {..}, or to all elements within body or html, i.e. h1 {..}, has the potential to pollute the test suite's CSS. Try adding: * { color: red }, for a quick example!\n\nconst projectName = 'javascript-calculator';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentValue: ['0'],\n      formula: [''],\n    }\n    this.handleClear = this.handleClear.bind(this);\n    this.handleDigit = this.handleDigit.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n  }\n  \n  handleClear() {\n    this.setState({\n      currentValue: ['0'],\n      formula: [''],\n    })\n  }\n  \n  handleDigit(e) {\n    const operatorRegex = /[-+*\\/]/;\n    const formulaOutput = this.state.formula.map(x => x.toString()).reduce((x, y) => x + y);\n    const currentValueOutput = this.state.currentValue.map(x => x.toString()).reduce((x, y) => x + y);\n    if (/=/.test(formulaOutput)) {\n      this.setState({\n        formula: [e.target.value],\n        currentValue: [e.target.value]\n      })\n    } else if (this.state.currentValue.length >= 25) {\n      alert('Max-digit length reached');\n    } else if (currentValueOutput === '0' && e.target.value === '0') {\n      return;\n    } else if (currentValueOutput === '0' && e.target.value !== '0') {\n      this.setState({\n        formula: [...this.state.formula, e.target.value],\n        currentValue: [e.target.value]\n      })\n    } else if (operatorRegex.test(currentValueOutput)) {\n      this.setState({\n        formula: [...this.state.formula, e.target.value],\n        currentValue: [e.target.value]\n      })\n    } else {\n      this.setState({\n        formula: [...this.state.formula, e.target.value],\n        currentValue: [...this.state.currentValue, e.target.value]\n      }) \n    }\n    e.preventDefault();\n  }\n  \n  handleOperator(e) {\n    const operatorRegex = /[-+*\\/]/;\n    const formulaOutput = this.state.formula.map(x => x.toString()).reduce((x, y) => x + y);\n    const currentValueOutput = this.state.currentValue.map(x => x.toString()).reduce((x, y) => x + y);\n    //This if statement deals with when user has already pressed + or - to begin calc\n    if (/=/g.test(formulaOutput)) {\n      this.setState({\n        currentValue: [e.target.value],\n        formula: [currentValueOutput, e.target.value] \n      })\n    //Deals with beginning the formula/output with an operator\n    } else if (currentValueOutput === '0' && formulaOutput === '0') {\n      if (e.target.value === '-') {\n        this.setState({\n          formula: [e.target.value],\n          currentValue: [e.target.value]\n        })\n      } else {\n        return;\n      }\n    //This statement deals with pressing two operators consecutively\n    } else if (operatorRegex.test(currentValueOutput)) {\n      this.setState({\n        currentValue: [e.target.value],\n        formula: [...this.state.formula.slice(0,this.state.formula.length-1), e.target.value]\n      })\n    //This statement deals with when current value is 0\n    } else if (currentValueOutput === '0') {\n      if (e.target.value === '-') {\n        this.setState({\n          currentValue: [e.target.value],\n          formula: [...this.state.formula, e.target.value]\n        })\n      } else {\n        return;\n      }\n    //Deals with operators when equals has been hit already\n    } else {\n      this.setState({\n        currentValue: [e.target.value],\n        formula: [...this.state.formula, e.target.value]\n      })\n    }\n    e.preventDefault();\n  }\n  \n  handleEquals(e) {\n    const formulaOutput = this.state.formula.map(x => x.toString()).reduce((x, y) => x + y);\n    const next = formulaOutput.split(/([-+*\\/])/);\n    const nextnext = next.filter(x => x !== '');\n    const preOutput = nextnext.map(x => {\n      if (!/[\\s-+*\\/]/.test(x)) {\n        return parseFloat(x);\n      } else {\n        return x;\n      }}).join('');\n    if (!/\\d/.test(preOutput[preOutput.length-1])) {\n      return;\n    } else {\n      const output = eval(preOutput);\n      this.setState({\n        currentValue: [output],\n        formula: [preOutput, '=', output]\n      })\n    }\n    e.preventDefault();\n  }\n  \n  handleDecimal(e) {\n    const decimalRegex = /\\./g;\n    const operatorRegex = /[-+*\\/]/;\n    const currentValueOutput = this.state.currentValue.map(x => x.toString()).reduce((x, y) => x + y);\n    if (this.state.currentValue.length >= 25) {\n      alert('Max digit length reached');\n    } else if (decimalRegex.test(currentValueOutput)) {\n      return;\n    } else if (operatorRegex.test(currentValueOutput)) {\n      this.setState({\n        currentValue: ['0', '.'],\n        formula: [...this.state.formula, '0', '.']\n      })\n    } else {\n      this.setState({\n        currentValue: [...this.state.currentValue, e.target.value],\n        formula: [...this.state.formula, e.target.value]\n      })\n    }\n    e.preventDefault();\n  }\n  \n  render() {\n    return (\n      <div>\n        <div id=\"output\">\n          <Formula\n            formula={this.state.formula}\n          />\n          <Output\n            currentValue={this.state.currentValue}\n          />\n        </div>\n        <Buttons\n          handleClear={this.handleClear}\n          handleOperator={this.handleOperator}\n          handleEquals={this.handleEquals}\n          handleDigit={this.handleDigit}\n          handleDecimal={this.handleDecimal}\n        />\n      </div>\n    )\n  }\n}\n\nclass Buttons extends React.Component {\n  render() {\n    return (\n      <div id=\"buttons\">\n        <button id=\"add\" value=\"+\" onClick={this.props.handleOperator}>+</button>\n        <button id=\"subtract\" value=\"-\" onClick={this.props.handleOperator}>-</button>\n        <button id=\"multiply\" value=\"*\" onClick={this.props.handleOperator}>x</button>\n        <button id=\"divide\" value=\"/\" onClick={this.props.handleOperator}>/</button>\n        <button id=\"one\" value=\"1\" onClick={this.props.handleDigit}>1</button>\n        <button id=\"two\" value=\"2\" onClick={this.props.handleDigit}>2</button>\n        <button id=\"three\" value=\"3\" onClick={this.props.handleDigit}>3</button>\n        <button id=\"clear\" onClick={this.props.handleClear} >AC</button>\n        <button id=\"four\" value=\"4\" onClick={this.props.handleDigit}>4</button>\n        <button id=\"five\" value=\"5\" onClick={this.props.handleDigit}>5</button>\n        <button id=\"six\" value=\"6\" onClick={this.props.handleDigit}>6</button>\n        <button id=\"seven\" value=\"7\" onClick={this.props.handleDigit}>7</button>\n        <button id=\"eight\" value=\"8\" onClick={this.props.handleDigit}>8</button>\n        <button id=\"nine\" value=\"9\" onClick={this.props.handleDigit}>9</button>\n        <button id=\"equals\" value=\"=\" onClick={this.props.handleEquals}>=</button>\n        <button id=\"zero\" value=\"0\" onClick={this.props.handleDigit}>0</button>\n        <button id=\"decimal\" value=\".\" onClick={this.props.handleDecimal}>.</button>\n      </div>\n    )\n  }\n}\n\nclass Output extends React.Component {\n  render() {\n    const currentValueOutput = this.props.currentValue.map(x => x.toString()).reduce((x, y) => x + y);\n    return (\n      <div id=\"display\">\n        {currentValueOutput}\n      </div>\n    )\n  }\n}\n\nclass Formula extends React.Component {\n  render() {\n    const formulaOutput = this.props.formula.map(x => x.toString()).reduce((x, y) => x + y);\n    return (\n      <div id=\"formula\">\n        {formulaOutput}\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('calculator-container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}